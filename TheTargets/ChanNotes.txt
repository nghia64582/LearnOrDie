- sd-cb:
    - @Singleton CAO class
        + Used to store data into database
        + extends JsCAO
        + Methods:
            + override protected def key(uid: Int)
            + getOrCreate(uid: Int)
            + getOrCreateWithCAS(uid: Int)
            + updateOne(uid: Int, data: Entity)
            + updateOneValue
            + updateManyValue
            + useAncientToRoll
            + updateDataWithLog
    - @Singleton Ops class
        + Used to define method which access and modify the data
            + purchase item, exchange item, spin the wheel, use the ticket, ...
        + Inject CAO class to interact with db (like save, load, update, ...)
        + Methods:
            + purchaseItem
            + tryOpenBook
            + useTheTicket
    - Entity case class:
        + Used to define structure of entities which is stored in db
        + Methods:
            + implicit val writes
            + implicit val reads
            + val default

- sd-api:
    + Controller: Handle Http RestAPI
        + needMod, needLogin: Authentication
        + connect with sql database by anorm, set up query + parser
        + case class to store entity
        + BoardMgr 
    + Use cb as library to access couchbase db (CAO, Ops, Entity)

- game-server:
    + Use smart-fox-server to organize game, handle matching logic, ...
    + Create class extends trait Cmd to define response to send to FE 
        + sendTo : send message to FE with data
    + Create class extends trait Req to define request sent from FE
    + Come with corresponding Param class to define structure of data
    + Use cb as library to access db (CAO, Ops, Entity)

- web-tool :
    + Connect to chanpro db to show data
    + Use html + scala

- Dev account:
    + nghiavt1 atbx6541
    + thidinh(1-200) abc1235

- Dev switching key:
    + 3Sd13221

- Development process:
    + Update code 
    + Commit and push
    + Engine auto build and show image name in Cháº¯n Dev 
    + Update image in Rancher chan-2-dev-thuong
    + Switch to Dev and test
    + Test and back to step 1, ....
    + After testing => create pull request from self branch
    + After reviewed + testing finished => merge to master + push tag

- General:
    - Access Chan Testing for newest web version
    - Dont login docker desktop to ensure not conflict
    - Couchbase Dev:
        + Enter key + base36(uid) to get the value of model CAO
    - With game-server, sd-cb, sd-api : get image name from mattermost
    - With webtool, get image from command line after sbt docker:publish
    - Change "+" into "-" in image name of mattermost, and only 
    - After add new key in CouchBase entity, should delete value of corresponding key, so the game server auto load default value or add new key, value 
