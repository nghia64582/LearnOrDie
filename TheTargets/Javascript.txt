- Functions :
    + Regular functions - 100
    + Arrow functions ((arg1, arg2) => { // do something  }) - 90
    + Anonymous functions. -
    + Immediately invoked function expression - 100
    + Control Flow → if, else, switch, for, while, do...while.
- Variables, Data Type:
    + let   : declare variable in block scope
    + const : declare constant
    + var   : declare variable in method scope
    + number
    + string    : "Hello World"
    + boolean   : true, false
    + null      : null
    + undefined :
    + object    : {"name": "Nghia", "age": 25}
    + symbol    :

- Advanced concepts:
    + Closures : 100
        + Define a function inside another function
        + Inner function can access var of outer scope
        + JavaScript auto split "var a = 2" into "var a" and "a = 2", "var a" will be move
            to top of file
        +
    + Hoisting :
        + Auto move declaration of "var" into top of file (const and let are not affected)
        + The same technique is applied to types of function (...)
    + Scope :
    + Prototypes & Inheritance :
    + Promise & async/await :

- ES6 Features
    + Arrow function -> const sum = (a, b) => a + b; 100
    + Destructuring -> const {name, age} = person;
    + Spread & Rest Operators ->  [...array] (spread)
    + Template Literals -> console.log(Hello ${name});
    + Modules (import/export) -> export default function(){} & import myFunc from './module'

- OOP:
    + Objects & Classes -> class Car { constructor(model) { this.model = model;}}
    + Encapsulation -> private
    + Inheritance -> class ElectricCar extends Car {}
    + Polymorphism -> Override class from parent

- Async:
    + Callbacks
    + Promises
    + Async/await
    + Event loop, how JS handle async execution

- JS in browser: 
    + JavaScript in the Browser
    + DOM Manipulation → document.querySelector(), element.innerHTML, element.style.
    + Events → addEventListener('click', callback).
    + LocalStorage & SessionStorage → Storing data in the browser.
    + Fetch API & AJAX → Making HTTP requests (fetch(), XMLHttpRequest).
