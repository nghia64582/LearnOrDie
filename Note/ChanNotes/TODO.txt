- Tìm hiểu tính năng chọc trong game-server: - done
    + Cài đặt chi phí chọc trong bàn chơi Khoa cử - 4 mức thi đình lên 10M - done

- Tìm hiểu napLanDau

- Thêm gói "bỏ qua quảng cáo", id = 5 - done

- Set up stickerV2 : - done
    + No reduce item for users when using sticker - done
    + Able with the users with no sticker (so users use it as a free feature) - done

- Tìm hiểu dev server: - done
    - Input:
        - Ngày l -> r
    - Output:
        - Tổng b của các dòng log của biến b từ ngày l -> r có chứa 
            freeCoinVer và isSkip=True

- Tìm hiểu AdsOps, cb, offer
    + Xử lý trong controller pay hàm payCardSimGw, getCardInfo, payCardSimGwNew, payCardSimGwVuaHungEvent
        truyền msg tới actor payCardByBotVtpActor là json
    + Trong receive của payCardByBotVtpActor sẽ xử lý các input chính (chú ý cần viết implicit json format)
        xử lý thông tin người dùng mua offer và sau đó cập nhật tài nguyên của user.
    + Cập nhật trong 3 actor:
        + PayCardByBotVtpActor
        + PayCardBySimGateWayActor
        + PayCardByUssdActor
    + Trong UssdModel, thêm isRemoveAdsPack vào:
        + ReqPayCardSubscriber
        + UssdCard
        + RepayUssdCard
        + RepaySubscriberCard
    + Trong sd-cb:
        + Thêm "packRemoveAds" vào AdsRewardData thể hiện timestamp hết bỏ quảng cáo.
        + Thêm hàm addPackRemoveAds vào AdsRewardOps để xử lý thêm pack bỏ quảng cáo.
        + ForeignCurrency thêm gói mới.

- Update query trong đếm unique user nạp ở web tool. - done, recheck
    + Ngày 14-4 query cũ có 718 unique user mua
    + Check query mới.

- Chuẩn bị ra gói flash-sale bảo: - done
    + Logic mua tăng bảo lời hơn dựa theo một điều kiện nhất định.
    + Cài đặt một ForeignCurrency mới trong sd-cb cho gói này.

- Viết thêm log ở cb cho gói flash sale để hiện thị trong lịch sử bảo của user. - done
- Trong api, xóa addVipScore đi, thay bằng allHandle. - done

- Xây dựng luồng nạp wallet:
    + User đăng ký và tự động nạp mỗi tháng. 
    + Chuẩn bị google play account và app store account. - done
    + Tạo endpoint trong sd-api.

- Xây dựng tính năng nạp thẻ mua thiên thư (một kiểu battle pass):
    + Tạo gói thanh toán mua thiên thư 100k
        + sd-cb openBookThienThu 
            + uid: 4728210
            + pack: PackThienThuItem(true,100,0,b1) -> redundant
            + tpePromotion: -1 -> redundant
            + turnPromo: 0 -> redundant
            + timeStart: 1731258000 -> redundant
            + msg: "Dùng 100 Ngọc mua quyển Thiên thư"
    + Cập nhật sd-cb
        + Logic cập nhật đổi ngọc và bảo cho user. - done
        + Mở khóa thiên thư cho user dựa trên payment - done
        + Đổi ngọc sẽ đổi toàn bộ lấy bảo, không đổi một phần.
    + Cập nhật sd-api
        + Thêm logic các gói thanh toán về thiên thư, tương tự như flash sale.
    + Cập nhật game-server
        + Tạo actor trong game server để xử lý việc đổi ngọc lấy bảo. - done
        + Khi user login sẽ gửi một request lên, server nhận, cập nhật bảo và ngọc cho user và response về cho client. - done
    + Flow đổi ngọc:
        + Mỗi khi user login, client sau khi có thông tin về ngọc và xu, nếu >0 sẽ gửi request lên server để đổi cả 2 lấy bảo - done
        + Game-server nhận request xong đổi ngọc cho user và thông báo về cho client. - done
    + Validate thông tin của user, trong trường hợp != 0 mới thực hiện update, còn = 0 thì không thực hiện để hạn chế lưu db
    + Các test case: - done
        + T1:
            + Set up ngọc và xu của acc != 0
            + Vào game
                + TH1: Out ra luôn
                    => Kết quả: 
                        + Xu và ngọc đều không thay đổi.
                + TH2: Nhấn vào đổi bảo
                    => Kết quả:
                        + Xu và ngọc về 0
                        + Bảo được cập nhật theo công thức
    + Cập nhật api để xử lý add tease sub cho user theo một số ngày nhất định
        + Chỉnh lại hàm addAncientMoney4User trong Mod controller => Tạo hàm mới - done
        + Copy api về pay-api để test trên local
        + Không push các file login, ... lên branch chính

- Cần làm rõ:
    + Trong trường hợp login lần đầu, đổi ngọc lấy bảo, xong bằng cách nào đó có ngọc (vd nạp qua backdoor)
        thì có bị đổi ngọc tiếp không? => Có.
    + Đổi tên được không, tại sao?
    + api mod test trên dev
    + Tạo data cho gói flash sale trong sd-cb - done
    + Tạo handle trong sd-cb ops - done
    + Clone code trong sd-api ứng với gói remove ads - done
    + Cập nhật cb và api theo hướng hạn chế update ở cb, đặt config ở cb - done
    + Tạo endpoint để test gói flash sale - remove
    + Tạo handle trong sd-api trong flow thường - done
    + Để config hard code trong api, không để trong sd-cb do api dễ cập nhật hơn - done
    + Xử lý trường hợp user nạp thừa. - done
    + Cập nhật thêm một trường trong ForeignCurrency để lưu thời gian hiện gói 
        flashsale gần nhất trong ngày. - done
    + Xử lý logic hiển thị 2 giờ mỗi ngày 1 lần nếu user chưa mua
        + Trigger update flashSaleTimeStamp khi user vào khu chơi (nếu timestamp là hôm qua
            thì update là now, nếu là hôm nay thì không update)
        + Gửi flashSaleTimeStamp cho client mỗi lần login - done
        + Tạo req trigger flash sale và gửi đến CoinSyncActor để trigger flash sale - done

- Pass wifi Sd132456@

- TODO:
    + Cài đặt đồng quan cho user:
        + Thêm thông tin trong ForeignCurrency
        + Quan để chơi làng 
        + Na ná giống bảo ở các bàn chơi cũ
    + Các logic chủ yếu xoay quanh quan => 
        + Thêm quan vào fc (silverCoin) - done
        + Cộng trừ quan trong bàn chơi (vào gà, tổng kết, chọc, ...)
        + Xử lý logic logCao.createOne - done
        + Cộng trừ quan cho user thông qua mod. - done
    + Thêm service game server cho đồng quan:
        + Chú ý host port của service mới. - done
        + Truyền thêm host port của game server mới này cho đồng quan. - done
        + Chú ý dữ liệu về host, port - done
        + Game server chỉ gửi một đống data lúc login, không cần gửi lúc connect. - done
        + Update lại port cho web trong quan. - done
    + Update thêm data cho quan trong web tool:
        + Thêm các mức cược vào mục dân làng thượng
            + 1, 2, 3, 5, 8
        + Thêm dãy cột cho dân làng hạ quan
            + Thêm 
        + Dãy cột cho dân làng hạ cũ
        + Chỉnh data trong phebao tool để update được data cho webtool,
    + Tạo tab ứng với đồng quan:
        + Tạo 2 tab ứng với đồng quan: 
            + Số ván chơi
            + Số phế quan
            + Các cột: tổng và các mức cược 10, 20, 30, 50k quan
            + Các dòng: ngày

    + Tạo chart nguồn cấp quan: - done
        + Tạo database cho chart nguồn cấp quan: - done
            + Tên: silver_coin_in
            + Các cột: id, day, coin, source 
        + Update phebao tool để parse dữ liệu và ghi vào db này - done
            + Parse dữ liệu từ log và convert sang dạng List<SilverCoinIn>
            + Update hàm ghi vào db: - done
                + Với mỗi ngày sẽ ghi nhiều dòng ứng với nhiều source khác nhau
            * Tạm thời khi chưa có data có thể fake dữ liệu vào bảng silver_coin_in
        + Update webtool để đọc dữ liệu từ bảng silver_coin_in:
            + Update repository: - done
                + Đọc dữ liệu từ bảng silver_coin_in
                + Chuyển đổi dữ liệu sang List<SilverCoinIn>
            + Trong tool controller: - done
                + Truyền dữ liệu List<SilverCoinIn> vào trong html
            + Trong html: - done
                + Tạo chart từ data của List<SilverCoinIn>
    + Tạo 2 phebao có update: - done
        + branch fee_quan ghi vào fee_quan, silver_coin_in với source là 1, 2 - done
        + branch main ghi vào các db khác và silver_coin_in với source là 3 - done
    + Xử lý case khi viết vào table silver_coin_in:
        + Có thể có case 2 tool cùng ghi vào 1 bảng
            => Để xử lý, trước khi ghi vào bảng thì get ra xem có data không, 
                nếu có thì cộng, nếu không thì ghi - done

    - Tạo offer flash sale 2.0:
        + Bán bảo và gói cảm xúc + ném gạch, ...
        + Đặc điểm offer tạo ra sẽ dựa trên lịch sử mua của user
    => Cần nghiên cứu về lịch sử mua offer của user để gắn nhãn
        + Có thể check lịch sử trong sql db của sd-api với các bảng: pay_card_history (cho nạp thẻ),
            play_store_purchase1 (cho nạp qua google play), apple_store_purchase2(cho nạp qua apple store)
        + Các cột cần quan tâm:
            + pay_card_history: uid, amout (số tiền), 
            + play_store_purchase1: uid, amount (số bảo)
            + apple_store_purchase2: uid, amount (số bảo)
    => Tạo gói offer với các giá trị linh hoạt
        + Lưu vào bằng cb với couchbase
    - Flow dự kiến:
        + User khi trải qua một sự kiện nào đấy sẽ gửi api trigger offer
        + Api nhận sẽ parse data về lịch sử pay của user
        + Lưu offer vào cb (các thông tin bao gồm số bảo và số tiền)
        + Gửi thông tin của offer về cho client (qua api)
        + Mỗi offer lưu thông tin bao gồm số bảo và số tiền
    - Trong api:
        + Nếu get data của flashsale có 3 trường hợp:
            + Chưa có => Trigger và gửi data của offer mới về cho user
            + Đã có => Gửi thông tin của offer hiện tại về cho user
            + Sau khi mua offer cần đánh flag là đã mua (để server biết mà không gen ra nữa)
    - Khi user mua red brick:
        + Mở tease 5 ngày
        + Mở brick 5 ngày
        + Cộng bảo theo offer
    - Vấn đề:
        - api dev thuong -> game server dev thường
        - api dev c3 -> game server dev thường
    - Giải pháp:
        - Đổi file mounting ở dev c3 sang 9012 của dev thường

    - Nghiên cứu thienthu, nếu có thiên thư, tự động nhận thưởng ở tab nhiệm vụ sau khi hoàn thành
        - Các bug đang vướng:
            + Không nhận nhiệm vụ đăng nhập - vv
            + Ở ngoài bàn chơi không thông báo khi hoàn thành nhiệm vụ
            + Khi hoàn thành trong bàn chơi, client vẫn hiển thị nút nhận

    - Cài đặt Consumable cho gói gạch đỏ apple pay + google play:
        + Quy trình:
            - User mua qua wallet lấy về một receipt
            - Sau khi thanh toán xong, server của apple/google sẽ gửi về 1 receipt
            - User gửi receipt lên server
            - Server sẽ parse receipt và lấy ra các thông tin cần thiết
            - Server gửi receipt lên apple/google để verify
            - Sau khi verify thành công, server sẽ cập nhật thông tin cho user
    - Tạo server quan 2 => rebase quan 2 vào master
    - Cập nhật lại logic vào bàn nhanh:
        - Ưu tiên các bàn đã có người, đợi người mới vào

    - Thêm flashsale + gạch đỏ - done
    - Chỉnh thời gian: chọn 5-11 thì hiện 5-11 thay vì 5-12
    - Tối ưu query cho nhanh hơn:

    - Cách xếp phòng:
        + Số người
        + Mức cược
        + Trạng thái - Đang là waiting

    => Log:
        + Danh sách các bàn chơi phù hợp và thông số mỗi bàn chơi (số người, mức cược, trạng thái)
    + Sau đó chỉ cần chọn một bàn ngẫu nhiên:
        + 

    - Cần test:
        + Quick join là ngẫu nhiên, mỗi lần join sẽ là một bàn khác nhau (trong một danh sách thỏa mãn)
        + Quick join sẽ ưu tiên bàn có người chơi, nếu không có thì mới tạo bàn mới
        + Có thể đặt điều kiện với các thông tin của bàn chơi như mức cược, số người

    - Cập nhật thiên thư
        + Chỉ còn nhiệm vụ ngày và nhiệm vụ kì
        + Nhiệm vụ thường:
           + Có 1 task cố định
           + Reset mỗi ngày
           + Chọn ngẫu nhiên n task từ danh sách m task
           + Progress vẫn như cũ, cố định
        + Nhiệm vụ vip:
            + Reset mỗi 2 tuần
            + Chọn toàn bộ danh sách trong config
        + Cần cập nhật cả server quan và server thường
        + Reward normal đợi đặt lại

    => Tìm hiểu yếu tố:
        + Khởi tạo mới task mỗi ngày.
        + Update task mỗi event.
        + Hoàn thiện task (đã nhận exp tự động)
        + Phân biệt nhiệm vụ ngày với nhiệm vụ vip
        + RewardCfg có thể cập nhật trong couchbase

    - Vấn đề:
        + Với config nhiệm vụ mới có 2 phương án:
            + Thêm các id nhiệm vụ mới vào config cũ
                +++ Có thể không cần cập nhật ở client
                --- 
            + Tạo một config mới hoàn toàn
                +++ 
                --- 

    - Các phần thay đổi và giải pháp:
        + Thay vì 3 phần exp là ngày, tuần và kì (3 tuần) thì giờ thành ngày và vip (2 tuần)
        + Ngày thì ai cũng có, vip thì chỉ có người mua mới có
        + Danh sách nhiệm vụ thay đổi và chia theo ngày và vip

    - Step 1:
        + Làm tình năng còn 2 phần: ngày và vip
        + Nhiệm vụ ngày có 1 task cố định, reset mỗi ngày
        + Nhiệm vụ vip có toàn bộ task, reset mỗi 2 tuần
    - Bug 1:
        + Không hiển thị nhiệm vụ trong thiên thư - done
        => Đã fix
    - Bug 2: 
        + Daily task đang không random
        + VIP task đang giống config cũ - done
    - Bug 3:
        + Đã tạo task và hiển thị client thành công:
    + Đặt thêm log trong cb:
        + Khi tạo nhiệm vụ ngày và nhiệm vụ vip
        + Check ngày mới
    => TODO:
        + Thêm logic để cập nhật task trên server:  
            38 - Chơi 10 ván - done
            39 - Ù trên 5 điểm - done
            40 - Ù trên 10 điểm - done
            41 - Ăn 10 cạ - 
            42 - Ăn 10 chắn - 
            43 - Ù Trì bạch thủ 1 lần - done
            44 - Ù bạch định 1 lần - done
            45 - Ù có Tôm 1 lần - done
            46 - Ù có Lèo 1 lần - done
            47 - Ù Trì bạch thủ Chi 1 lần - done
            48 - Dùng biểu cảm 5 lần - done
            49 - Ù có Chíu 1 lần - done
            50 - Ù Thông trì 1 lần - done
            51 - Ù có bòn 1 lần - done
            52 - Ù Thông 2 lần - done
        
            53 - Mở quyển thượng
            54 - Chơi 100 ván - done
            55 - Ù trên 15 điểm - done
            56 - Ù trên 25 điểm - done
            57 - Ăn 100 cạ - 
            58 - Ăn 100 chắn - 
            59 - Ù Trì bạch thủ 5 lần - done
            60 - Ù bạch định 5 lần - done
            61 - Ù có Tôm 10 lần - done
            62 - Ù có Lèo 10 lần - done
            63 - Ù Trì bạch thủ Chi 5 lần - done
            64 - Dùng biểu cảm 50 lần - done
            65 - Ù có Chíu 10 lần - done
            66 - Ù Thông trì 10 lần - done
            67 - Ù có bòn 10 lần - done
            68 - Ù Thông 10 lần - done
        val uThong10LanV2 = Value(68, "Ù Thông 10 lần")
            + Logic các id đã hoàn thành
               + 54, 38, 39, 40, 55, 56
    
    - Nhờ anh Thắng test
    - Cherry pick quan
        + Squash commit cho dễ
    - Nhờ lynt hoanhnh review code
    - Merge vào và đánh tag bảo

    - Update code:
        + Xóa logger - done
        + Cập nhật thiên thư mission: Game bắn event sang thienThuActor, để 
            ThienThuActor xử lý convert event sang mission và cập nhật các nhiệm vụ tương ứng - 
        + Cân nhắc lưu mission config trong cb thay vì hard code - 
            + Các thông tin lưu vào trong config cb:
                + Tạo map EventId -> List[MissionId]
        + Xóa các change không cần thiết - done
        + Xử lý option trường hợp isEmpty - done
    - Note approve để merge code - done

    - Tính năng mới: AI Assitance
        + Một tool hỗ trợ người chơi trong bàn chơi
        + cb lưu timestamp hạn dùng AI
        + Khi vào bàn chơi, nếu có ai thì sẽ các tính năng hỗ trợ
        + Các phần cần triển khai:
            + cb: Lưu timestamp hạn dùng AI trong ForeignCurrency
            + cb: Mở AI cho user từ gói nạp
            + cb: Mở AI cho user bằng mod

            
            