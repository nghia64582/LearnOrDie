- sd-cb:
    - @Singleton CAO class
        + Used to store data into database
        + extends JsCAO
        + Methods:
            + override protected def key(uid: Int)
            + getOrCreate(uid: Int)
            + getOrCreateWithCAS(uid: Int)
            + updateOne(uid: Int, data: Entity)
            + updateOneValue
            + updateManyValue
            + useAncientToRoll
            + updateDataWithLog
    - @Singleton Ops class
        + Used to define method which access and modify the data
            + purchase item, exchange item, spin the wheel, use the ticket, ...
        + Inject CAO class to interact with db (like save, load, update, ...)
        + Methods:
            + purchaseItem
            + tryOpenBook
            + useTheTicket
    - Entity case class:
        + Used to define structure of entities which is stored in db
        + Methods:
            + implicit val writes
            + implicit val reads
            + val default

- sd-api:
    + Controller: Handle Http RestAPI
        + needMod, needLogin: Authentication
        + connect with sql database by anorm, set up query + parser
        + case class to store entity
        + BoardMgr 
    + Use cb as library to access couchbase db (CAO, Ops, Entity)

- game-server:
    + Use smart-fox-server to organize game, handle matching logic, ...
    + Create class extends trait Cmd to define response to send to FE 
        + sendTo : send message to FE with data
    + Create class extends trait Req to define request sent from FE
    + Come with corresponding Param class to define structure of data
    + Use cb as library to access db (CAO, Ops, Entity)

- web-tool :
    + Connect to chanpro db to show data
    + Use html + scala

- Các lớp trong game-server:
    + TeaseCmd
        + extends Cmd
        + "t"   : id
        + "ub"  : teaseUids.map(Integer.valueOf).asJava
        + "uc"  : uid
        + "nc"  : username
    + TeaseSubscriptionCmd
        + extends Cmd
        + "t"   : time
    + UserTeaseCmd
        + extends Cmd
        + List[id: Int, remaining: Int]
    + TeaseConfigCmd
        + extends Cmd
        + "t"   : cfg.timeLimit
    + TeaseHandler:
        + extends BaseFSM
        + whenAllState {
            case Ev(req: TeaseReq) => 
                sendTease(req)
                stay()
        }
    + ITease:
        + trait
        + def sendTease(req: TeaseReq): Unit
    + TeaseImpl:
        + trait
        + extends ITease
        + sendTease => check if user can tease 
        + updateTease: 
    + TeaseReq(TeaseParam):
        + "id"          : id
        + Optional["u"] : uid

- Các lớp trong sd-api :
    + ForeignCurrency teaseSub: long

- Các lớp trong sd-cb  :
    + TeaseConfig
        + timeLimit             : Int
        + items                 : List[TeaseItem]
        + limitStakeUsingTease  : Int
        + spectatorCanTease     : Boolean
        + isActive              : Boolean
    + TeaseConfigCAO
        + Lưu data trong db
    + UserTeaseData
        + data      : List[TeaseData]
    + TeaseData:
        + id        : Int
        + remaining : Int
    + UserTeaseDataCAO
        + Lưu data trong db
    + TeaseItem:
        + id        : Int, id của loại chọc
        + tax       : Double, phí dùng chọc
        + totalFree : Int
        + usingCoin : Boolean, có dùng bảo không 
        + status    : Int, disable = 0, enable = 1, coming = 2, priv = 3
    + ForeignCurrencyOps:

        + addTeaseSub

- Dev account:
    + nghiavt1 atbx6541
    + thidinh(1-200) abc1235

- Dev switching key:
    + 3Sd13221

- Development process:
    + Update code 
    + Commit and push
    + Engine auto build and show image name in Chắn Dev 
    + Update image in Rancher chan-2-dev-thuong
    + Switch to Dev and test
    + Test and back to step 1, ....
    + After testing => create pull request from self branch
    + After reviewed + testing finished => merge to master + push tag

- General:
    - Access Chan Testing for newest web version
    - Dont login docker desktop to ensure not conflict
    - Couchbase Dev:
        + Enter key + base36(uid) to get the value of model CAO
    - With game-server, sd-cb, sd-api : get image name from mattermost
    - With webtool, get image from command line after sbt docker:publish
    - Change "+" into "-" in image name of mattermost, and only in rancher
    - After add new key in CouchBase entity, should delete value of corresponding key, so the game server auto load default value or add new key, value 
    - We can use dev thuong and c3 alternatively, so when one is used, use the other one
    - To store data in couchbase, we need to implement
        + A user data case class to define the structure of data
        + A companion object with json format to store in db
        + The value in data should be Int, String, Float, Double, Option[], ...
        + Then define a CAO as singleton and inject CB to store data.
    - Each action update users' coin has to write logCao
    - Remember use merge branch in github.com, instead of in Github desktop
    - When testing local with sd-api-pay:
        + Remember to delete cookie to re-login
        + If code ts change, need to restart the app, other change, the restart is not neccessary
    - Machine: uf5, f2, uf4, f3, uf5
    - Log api-dev-c3: dev.sandinhstudio.com - /opt/sd/api-log-c3
    - Log api-dev-thuong: dev.sandinhstudio.com - /opt/sd/api-log
    - Log game-server-dev-c3:/opt/sd/chan-log-namnh
    - Log game-server-dev-thuong:/opt/sd/chan-log
    - Log game-server-live: /mnt/hdd2/f1chanlogs
    - Version to run pay api local: nvm version 1, node version 8
    - Just upgrade container in rancher after testing is done (slowly)
    - Handle conflict in rancher: 
        + Change scale to 0, 1, or 2 
    - Update Mod để không bị lỗi 415 cần định nghĩa json trong modNapBao của mod.ts
    - Để build sd-api-pay trên product cần push các file js được build, nếu không sẽ không có thay đổi
    - Config fodi:
        + Cần hàm getOrCreate
        + cache lại trong cacheApi
        + Tạo hàm reload config trong small tool
    - Cần rebase trước khi tạo pull request
    - Chú ý hàm SuccessPurchase
    - sd-api-pay dùng 
        + nvm - 1.1.11
        + npm - 6.13.4
    - Các 